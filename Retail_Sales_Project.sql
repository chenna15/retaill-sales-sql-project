CREATE DATABASE RETAIL_SALES;

USE RETAIL_sALES;

create table Customers(
CUSTOMER_ID VARCHAR(25) PRIMARY KEY,
NAME VARCHAR(30),
CITY VARCHAR(50),
EMAIL VARCHAR(50)
);

CREATE TABLE Products(
PRODUCT_ID VARCHAR(25) PRIMARY KEY,
PRODUCTNAME VARCHAR(50),
CATEGORY VARCHAR(50),
PRICE DECIMAL(10,2)
);


CREATE TABLE ORDERS(
ORDER_ID VARCHAR(25) PRIMARY KEY,
CUSTOMER_ID VARCHAR(25),
ORDER_DATE DATE,
FOREIGN KEY (CUSTOMER_ID) REFERENCES  CUSTOMERS(CUSTOMER_ID)
);


CREATE TABLE OrderedItems(
ITEM_ID VARCHAR(25) PRIMARY KEY,
ORDER_ID VARCHAR(25),
PRODUCT_ID VARCHAR(25),
QUANTITY INT,
FOREIGN KEY(ORDER_ID) REFERENCES ORDERS(ORDER_ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);


INSERT INTO CUSTOMERS (CUSTOMER_ID, NAME, CITY, EMAIL)VALUES
(1,'Chinna','Kurnool','chinna31@gmail.com'),
(2,'Leela','Vizag','leela43@gmail.com'),
(3,'Chandu','Hyderabad','chandu12@gmail.com'),
(4,'Mahendra','Bangalore','mahi3@gmail.com'),
(5,'Pavan','Kurnool','pavan13@Gmail.com'),
(6,'Shiva','Chennai','shiva45@gmail.com'),
(7,'Karan','Hyderabad','karan22@gmail.com'),
(8,'Raj','Pune','raj_22@gmail.com'),
(9,'Alok','Bangalore','alok22@gmail.com'),
(10,'Karthik','Bangalore','karthiksinha@gmail.com');


insert into products (product_id,productname,category,price) values
('P101','Laptop','Electronics',50000),
('P102','Headphones','Electronics',2000),
('P103','Sofa','Furniture',1500),
('P104','MacBook','ELectronics',150000),
('P105','TeddyBear','DecorItems',1200),
('P106','Mouse','Electronics',750),
('P107','ComputerDesk','Furniture',4500),
('P108','Fan','Appliances',2300),
('P109','PenSet','Stationary',130),
('P110','Monitor','Electronics',14500);



insert into orders (order_id, customer_id,order_date) values
('O101',1,'2024-12-10'),
('O102',2,'2025-01-16'),
('O103',3,'2025-01-12'),
('O104',2,'2025-03-04'),
('O105',6,'2025-03-09'),
('O106',9,'2025-03-16'),
('O107',4,'2025-03-27'),
('O108',7,'2025-04-02');


insert into OrderedItems(item_id,order_id,product_id,quantity) values
('I1','O101','P101',1),
('I2','O101','P104',2),
('I3','O102','P103',3),
('I4','O103','P101',1),
('I5','O102','P105',6),
('I6','O101','P102',2),
('I7','O106','P107',4),
('I8','O108','P109',1),
('I9','O108','P102',1),
('I10','O104','P105',2);


#TOTAL SALES BY CITY
SELECT CITY, SUM(PRICE*QUANTITY)"TOTAL_SALES"
FROM CUSTOMERS C INNER JOIN ORDERS O ON O.CUSTOMER_ID=C.CUSTOMER_ID
INNER JOIN ORDEREDITEMS OI  ON O.ORDER_ID=OI.ORDER_ID
INNER JOIN PRODUCTS P ON OI.PRODUCT_ID=P.PRODUCT_ID
GROUP BY CITY;

#TOP_SELLING PRODUCT
SELECT PRODUCTNAME, SUM(QUANTITY) AS "TOTAL_QTY_SOLD"
FROM ORDEREDITEMS OI INNER JOIN PRODUCTS P ON OI.PRODUCT_ID=P.PRODUCT_ID
GROUP BY PRODUCTNAME
ORDER BY TOTAL_QTY_SOLD DESC
LIMIT 1;

#MONTHLY_SALES_SUMMARY
SELECT date_format(ORDER_DATE,'%Y-%M') AS "MONTH", SUM(PRICE*QUANTITY) AS "MONTHLY_SALES"
FROM ORDERS O INNER JOIN ORDEREDITEMS OI ON O.ORDER_ID=OI.ORDER_ID
INNER JOIN PRODUCTS P ON OI.PRODUCT_ID=P.PRODUCT_ID
GROUP BY MONTH
ORDER BY MONTH;


#CUSTOMER_ORDERED_COUNT
SELECT NAME, COUNT(ORDER_ID) AS "TOTAL_ORDERS"
FROM CUSTOMERS C INNER JOIN ORDERS O ON C.CUSTOMER_ID=O.CUSTOMER_ID
GROUP BY NAME;



# TOTAL SPENDING OF EACH CUSTOMER SORTED FROM HIGHEST TO LOWEST USING VIEWS
CREATE VIEW CUSTOMERSALES AS 
SELECT NAME,CITY, SUM(PRICE*QUANTITY) AS "TOTAL_SPENT"
FROM CUSTOMERS C INNER JOIN ORDERS O ON O.CUSTOMER_ID=C.CUSTOMER_ID
INNER JOIN ORDEREDITEMS OI ON O.ORDER_ID=OI.ORDER_ID
INNER JOIN PRODUCTS P ON P.PRODUCT_ID=OI.PRODUCT_ID
GROUP BY NAME, CITY
ORDER BY TOTAL_SPENT DESC;

SELECT * FROM  CUSTOMERSALES;


#MONTHLY_REVENUE (total sales revenue grouped by each month
CREATE VIEW MonthlyRevenue
AS SELECT date_format(ORDER_DATE,'%Y-%M')AS "MONTH",
SUM(PRICE*QUANTITY) AS "MONTHLY_SALES"
FROM ORDERS O INNER JOIN ORDEREDITEMS OI ON O.ORDER_ID=OI.ORDER_ID
INNER JOIN PRODUCTS P ON OI.PRODUCT_ID=P.PRODUCT_ID
GROUP BY MONTH;

SELECT * FROM MONTHLYREVENUE;



#ProductSalesSummary
#how many units were sold for each product and total revenue from it.
CREATE VIEW ProductSalesSummary AS 
SELECT P.PRODUCT_ID,
P.PRODUCTNAME,
P.CATEGORY,
SUM(OI.QUANTITY) AS "TOTAL_UNITS_SOLD",
SUM(OI.QUANTITY*P.PRICE) AS TOTAL_REVENUE
FROM PRODUCTS P INNER JOIN ORDEREDITEMS OI ON P.PRODUCT_ID= OI.PRODUCT_ID
GROUP BY P.PRODUCT_ID, P.PRODUCTNAME, P.CATEGORY
ORDER BY TOTAL_UNITS_SOLD DESC;

SELECT * FROM PRODUCTSALESSUMMARY;




